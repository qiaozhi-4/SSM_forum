<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">
    <!--开启注解扫描-->
    <context:component-scan base-package="com.forum">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--<context:property-placeholder location="classpath:jdbc.properties" file-encoding="utf-8"/>-->
    <!--导入外部配置文件：多个配置文件-->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="locations">
            <array>
                <value>classpath:jdbc.properties</value>
                <value>classpath:redis.properties</value>
            </array>
        </property>
        <property name="fileEncoding" value="utf-8"/>
    </bean>

    <!--配置数据库连接池-->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--使用spring管理事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="myAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"/>
            <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="p1" expression="execution(* com.forum.service.impl.*.*(..))"/>
        <aop:advisor pointcut-ref="p1" order="1" advice-ref="myAdvice"/>
    </aop:config>

<!--    <bean id = "ServiceLogAspect" class = "com.forum.config.ServiceLogAspect"></bean>-->
<!--    <aop:config>-->
<!--        <aop:aspect id="serviceLogAspect" ref="ServiceLogAspect">-->
<!--            <aop:pointcut expression="execution(* com.forum.service.impl.*.*(..))" id="businessService"/>-->
<!--            <aop:before method="doBefore" pointcut-ref="businessService"/>-->
<!--            <aop:after method="after" pointcut-ref="businessService"/>-->
<!--            <aop:around method="Around" pointcut-ref="businessService"/>-->
<!--            <aop:after-returning method="AfterReturning" pointcut-ref="businessService"/>-->
<!--            <aop:after-throwing method="AfterThrowing" pointcut-ref="businessService" throwing="error"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!--配置mybatis-plus-->
    <bean id="sqlSessionFactory" class="com.baomidou.mybatisplus.extension.spring.MybatisSqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageInterceptor"/>
            </array>
        </property>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.forum.mapper"/>
        <property name="annotationClass" value="org.apache.ibatis.annotations.Mapper"/>
    </bean>

    <!--redis配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <property name="config" ref="jedisPoolConfig"/>
    </bean>

    <!--2. shiro的配置-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <bean id="shiroRealm" class="com.forum.shiro.MyRealm">
        <property name="credentialsMatcher">
            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
                <property name="hashAlgorithmName" value="MD5"/>
                <property name="hashIterations" value="2"/>
            </bean>
        </property>
    </bean>
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="shiroRealm"/>
        <property name="cacheManager" ref="ehCacheManager"/>
    </bean>
    <!--这里id必须为web.xml文件中配置的filter的名字-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/index"/>
        <property name="successUrl" value="/success"/>
        <property name="unauthorizedUrl" value="/403"/>
        <!--定义页面的访问规则：可以使用通配符
            anon - 匿名访问，无需认证
            authc - 必须要认证才能访问
            logout - 登出页面
            roles[xxx, yyy] - 必须要有xxx、yyy的角色才能访问
            注意点：可以写多种方式，逗号隔开；【自上而下匹配】匹配了前面，后面不会匹配
        -->
        <property name="filterChainDefinitions">
            <value>
                /admin/* = authc
                /myMusic = authc
                <!--配置为登出路径-->
                /logout = logout
                /* = anon
            </value>
        </property>
    </bean>



</beans>